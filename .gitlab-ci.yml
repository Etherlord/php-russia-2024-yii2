stages:
    - build
    - push
    - deploy

build:
    stage: build
    script:
        - docker build -f ./docker/php-fpm/Dockerfile --target prod-php -t ${CI_REGISTRY_IMAGE}:php-${CI_COMMIT_SHORT_SHA} .
        - docker build -f ./docker/nginx/Dockerfile --target prod-nginx -t ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA} .
    only:
        - main
    when: on_success
    tags:
        - php-russia-2024-yii

push:
    stage: push
    before_script:
        - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    after_script:
        - docker logout ${CI_REGISTRY}
    script:
        - docker push ${CI_REGISTRY_IMAGE}:php-${CI_COMMIT_SHORT_SHA}
        - docker push ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA}
    when: on_success
    only:
        - main
    tags:
        - php-russia-2024-yii

deploy:
    stage: deploy
    script:
        - ssh gitlab-deploy@192.168.0.8 "mkdir -p /home/gitlab-deploy/php-russia-2024-yii"
        - scp docker-compose.prod.yaml gitlab-deploy@192.168.0.8:/home/gitlab-deploy/php-russia-2024-yii
        - ssh gitlab-deploy@192.168.0.8 "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}"
        - ssh gitlab-deploy@192.168.0.8 "docker pull ${CI_REGISTRY_IMAGE}:php-${CI_COMMIT_SHORT_SHA}"
        - ssh gitlab-deploy@192.168.0.8 "docker pull ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA}"
        - |
            ssh gitlab-deploy@192.168.0.8 "cd /home/gitlab-deploy/php-russia-2024-yii && \ 
              WELCOME_MESSAGE='${WELCOME_MESSAGE}' \
              CI_REGISTRY_IMAGE=${CI_REGISTRY_IMAGE} \
              CI_COMMIT_SHORT_SHA=${CI_COMMIT_SHORT_SHA} \
              JWT_SECRET=${JWT_SECRET} \
              docker compose -f docker-compose.prod.yaml up --remove-orphans --detach"
        - ssh gitlab-deploy@192.168.0.8 "docker logout ${CI_REGISTRY}"
    only:
        - main
    when: on_success
    tags:
        - php-russia-2024-yii
